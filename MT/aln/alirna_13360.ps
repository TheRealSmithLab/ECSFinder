%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon May  5 22:14:21 2025
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUCCGGAUCCAUUAUCCACAGCCUAAACGACGAACAAGACAUUCGAAAAAUAGGAGGACUAUUCAAAACAAUACCCUUCACCUCAACCUCCCUCAUUAUUGGCAGCCUAGCACUAACAGGAAUACCUUUCCUCACAGGAUUCUACUCCAAAGACCUAAUCAUCGAAGCCGCAAACACGUCUUAUACCAACGCCUGAGCC\
) } def
/len { sequence length } bind def

/coor [
[93.87443542 265.51260376]
[99.92077637 249.67347717]
[99.92077637 234.67347717]
[99.92077637 219.67347717]
[99.92077637 204.67347717]
[92.18347931 191.94621277]
[99.92077637 178.14604187]
[99.92077637 163.14604187]
[93.82584381 158.77548218]
[86.63446045 171.93922424]
[79.44307709 185.10296631]
[72.25169373 198.26669312]
[65.06031036 211.43043518]
[61.05949783 225.88703918]
[48.13003159 233.49157715]
[33.55101776 229.96278381]
[25.53024101 217.28732300]
[28.58328629 202.60131836]
[40.99317932 194.17236328]
[51.15387726 183.13786316]
[61.31457901 172.10336304]
[71.47527313 161.06886292]
[81.63597870 150.03436279]
[75.54103851 145.66380310]
[61.33396912 150.47619629]
[47.12689590 155.28858948]
[46.05871201 170.42578125]
[39.29472351 183.96429443]
[27.89351082 193.85499573]
[13.61284733 198.61422729]
[-1.36127543 197.54627991]
[-14.74924946 190.84497070]
[-24.52489471 179.55931091]
[-38.73196793 184.37170410]
[-41.05783081 199.49945068]
[-50.15682602 211.80664062]
[-63.93806839 218.46516418]
[-79.23473358 217.94494629]
[-92.53176117 210.36550903]
[-100.77358246 197.46858215]
[-102.06629181 182.21775818]
[-96.11283875 168.11758423]
[-84.28128052 158.40815735]
[-69.29042053 155.32066345]
[-54.58504868 159.56455994]
[-43.54435349 170.16462708]
[-29.33728027 165.35224915]
[-28.43269730 150.44885254]
[-21.87335396 136.99075317]
[-10.63080311 127.04239655]
[3.60240388 122.14306641]
[18.66748619 123.06879425]
[32.26684952 129.70959473]
[42.31450653 141.08151245]
[56.52157974 136.26911926]
[70.72865295 131.45674133]
[58.35425568 104.92195892]
[65.92397308 77.37678528]
[52.97264862 69.80953979]
[41.32619476 79.51190948]
[27.06265450 84.64290619]
[11.90441513 84.58294678]
[-2.31808972 79.33926392]
[-13.88742352 69.54506683]
[-21.40653229 56.38304901]
[-23.96744728 41.44258118]
[-21.26092720 26.52780533]
[-13.61379528 13.43975067]
[-1.94948113 3.75886273]
[12.32349300 -1.34584272]
[27.48159599 -1.25794852]
[41.69441223 4.01193190]
[53.24567795 13.82743454]
[60.74051666 27.00329018]
[63.27389526 41.94845200]
[60.53989410 56.85821533]
[73.49121857 64.42545319]
[80.66615295 62.24134445]
[72.92822266 49.39126968]
[65.19029236 36.54119110]
[57.45236588 23.69111633]
[49.71443939 10.84103966]
[41.97651291 -2.00903702]
[29.07948685 -9.66845894]
[19.65370941 -21.33699417]
[14.87730122 -35.55620575]
[15.34726048 -50.54883957]
[21.00484657 -64.44098663]
[31.14292526 -75.49626923]
[44.49434280 -82.33290863]
[59.39031982 -84.09638977]
[73.96901703 -80.56630707]
[86.40826416 -72.18386841]
[95.15327454 -59.99679565]
[99.11103058 -45.52833939]
[97.78684998 -30.58690262]
[91.34403992 -17.03693008]
[92.07843781 -2.05491972]
[92.81282806 12.92709160]
[93.54722595 27.90910339]
[94.28162384 42.89111328]
[95.01601410 57.87312698]
[102.19094849 55.68901443]
[108.72921753 42.18897629]
[100.54536438 27.39019966]
[102.77010345 10.79388523]
[114.33085632 -1.08884716]
[130.53178406 -3.71531010]
[136.85931396 -17.31539917]
[143.18684387 -30.91548729]
[143.97093201 -40.02364731]
[149.71998596 -44.67670441]
[144.29721069 -59.52153778]
[151.03529358 -73.81747437]
[165.93663025 -79.08299255]
[180.16052246 -72.19415283]
[185.26820374 -57.23797607]
[178.22937012 -43.08770370]
[163.22001648 -38.13843536]
[156.78692627 -24.58796310]
[150.45941162 -10.98787308]
[144.13188171 2.61221552]
[151.67112732 13.63532448]
[152.78620911 27.05207443]
[147.07908630 39.36500931]
[135.94418335 47.31131363]
[122.22925568 48.72724152]
[115.69098663 62.22728348]
[141.30155945 92.73537445]
[129.03495789 131.67504883]
[143.98962402 130.50979614]
[158.94430542 129.34454346]
[164.86514282 113.23184967]
[177.19105530 101.36380768]
[193.41099548 96.09107208]
[210.24980164 98.42749023]
[224.32948303 107.85556030]
[232.84692383 122.44005585]
[247.75811768 120.81027222]
[262.66931152 119.18048859]
[268.22854614 115.58030701]
[273.91665649 115.36580658]
[278.06857300 117.73932648]
[293.02325439 116.57406616]
[307.97790527 115.40881348]
[316.92077637 102.58074951]
[332.03051758 98.55216980]
[346.17282104 105.22525024]
[352.67007446 119.44916534]
[348.45449829 134.50781250]
[335.51654053 143.29096985]
[319.96514893 141.65148926]
[309.14318848 130.36347961]
[294.18850708 131.52874756]
[279.23382568 132.69400024]
[264.29910278 134.09169006]
[249.38789368 135.72146606]
[234.47669983 137.35125732]
[231.15632629 149.91784668]
[223.74307251 160.63320923]
[213.10227966 168.20834351]
[200.48912048 171.72303772]
[187.40052795 170.73759460]
[175.39752197 165.34779358]
[165.91908264 156.17594910]
[160.10955811 144.29920959]
[145.15489197 145.46446228]
[130.20021057 146.62973022]
[143.88282776 152.77676392]
[157.56544495 158.92381287]
[171.24806213 165.07084656]
[184.93066406 171.21789551]
[198.61328125 177.36492920]
[213.55233765 178.71563721]
[227.44235229 184.37847900]
[239.06744385 193.85777283]
[247.41007996 206.32376099]
[251.73995972 220.68524170]
[251.67808533 235.68510437]
[247.22987366 250.01037598]
[238.78469849 262.40710449]
[227.08180237 271.79019165]
[213.14555359 277.33825684]
[198.19586182 278.56567383]
[183.54130554 275.36502075]
[170.46466064 268.01644897]
[160.11058044 257.16320801]
[153.38537598 243.75532532]
[150.87770081 228.96473694]
[143.68630981 215.80099487]
[136.49493408 202.63725281]
[129.30354309 189.47351074]
[122.11215973 176.30978394]
[114.92077637 163.14604187]
[114.92077637 178.14604187]
[122.65808105 191.94621277]
[114.92077637 204.67347717]
[114.92077637 219.67347717]
[114.92077637 234.67347717]
[114.92077637 249.67347717]
[120.96711731 265.51260376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[7 195]
[8 194]
[24 56]
[25 55]
[26 54]
[33 47]
[34 46]
[58 77]
[59 76]
[103 128]
[104 127]
[108 122]
[109 121]
[110 120]
[112 119]
[130 168]
[131 167]
[132 166]
[138 158]
[139 157]
[140 156]
[143 155]
[144 154]
[145 153]
] def

init

% Start Annotations
2 200 0.0 0.6 colorpair
3 199 0.16 1 colorpair
4 198 0.16 0.6 colorpair
5 197 0.0 1 colorpair
7 195 0.0 0.6 colorpair
8 194 0.0 1 colorpair
24 56 0.16 1 colorpair
25 55 0.0 1 colorpair
26 54 0.16 1 colorpair
33 47 0.16 1 colorpair
34 46 0.0 1 colorpair
58 77 0.0 0.2 colorpair
59 76 0.0 0.2 colorpair
103 128 0.0 0.6 colorpair
104 127 0.0 1 colorpair
108 122 0.16 1 colorpair
109 121 0.16 1 colorpair
112 119 0.16 1 colorpair
130 168 0.16 1 colorpair
131 167 0.0 0.6 colorpair
132 166 0.16 1 colorpair
139 157 0.16 1 colorpair
140 156 0.16 1 colorpair
143 155 0.0 1 colorpair
144 154 0.16 1 colorpair
145 153 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 200 1 gmark
3 cmark
4 198 1 gmark
198 cmark
7 195 1 gmark
24 cmark
54 cmark
33 cmark
58 77 2 gmark
59 76 2 gmark
103 128 1 gmark
108 cmark
109 cmark
110 120 3 gmark
119 cmark
168 cmark
131 167 1 gmark
132 cmark
138 158 4 gmark
157 cmark
156 cmark
144 cmark
153 cmark

% End Annotations
showpage
end
%%EOF
