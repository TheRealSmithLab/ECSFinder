%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon May  5 22:09:24 2025
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGCCAACAUAAUACCCAUCAUCAUACUAGUAUUUGCAGCCUGCGAAGCAGCAGUAGGCCUAGCCCUACUAGUAAUAAUCUCAAACACAUAUGGAACAGACUACGUACAAAACCUAAACCUACUACAAUGCUAA\
) } def
/len { sequence length } bind def

/coor [
[86.45365906 307.76080322]
[92.50000000 291.92166138]
[92.50000000 276.92166138]
[92.50000000 261.92166138]
[92.50000000 246.92166138]
[77.66428375 245.40750122]
[63.05807877 242.39915466]
[48.83148575 237.92755127]
[35.13069153 232.03862000]
[22.09648132 224.79289246]
[9.86279011 216.26481628]
[-1.44466782 206.54203796]
[-11.70970058 195.72444153]
[-20.82682610 183.92320251]
[-28.70236015 171.25958252]
[-35.25537491 157.86372375]
[-40.41852951 143.87326050]
[-44.13877106 129.43196106]
[-46.37787247 114.68822479]
[-47.11282349 99.79355621]
[-46.33607483 84.90101624]
[-44.05560303 70.16362000]
[-40.29484177 55.73282623]
[-35.09244156 41.75690842]
[-28.50185776 28.37948608]
[-20.59081459 15.73802090]
[-11.44060326 3.96241617]
[-22.28936577 -6.39636564]
[-33.13812637 -16.75514793]
[-43.98688889 -27.11392975]
[-54.83565140 -37.47270966]
[-65.68441772 -47.83149338]
[-79.07492065 -44.35519409]
[-92.32341003 -47.94354630]
[-101.97525024 -57.54942703]
[-105.56902313 -70.57138824]
[-102.26367188 -83.55755615]
[-112.87026978 -94.16416168]
[-132.51864624 -98.39687347]
[-136.91184998 -117.17332458]
[-147.99699402 -127.27875519]
[-159.08212280 -137.38418579]
[-170.16725159 -147.48962402]
[-181.59580994 -157.20497131]
[-193.35408020 -166.51856995]
[-209.02221680 -164.44850159]
[-221.51402283 -174.12995911]
[-223.41831970 -189.81909180]
[-213.60533142 -202.20783997]
[-197.89694214 -203.94615173]
[-185.61264038 -194.00274658]
[-184.04049683 -178.27684021]
[-172.28222656 -168.96324158]
[-168.67210388 -169.04486084]
[-164.84924316 -167.32438660]
[-161.68804932 -163.72477722]
[-160.06181335 -158.57475281]
[-148.97668457 -148.46932983]
[-137.89155579 -138.36389160]
[-126.80641937 -128.25845337]
[-116.57231903 -129.64624023]
[-107.08671570 -125.03175354]
[-101.63780212 -115.74281311]
[-102.26367188 -104.77075958]
[-91.65706635 -94.16416168]
[-75.57805634 -97.26133728]
[-60.65793610 -90.12210083]
[-52.82653809 -75.36560059]
[-55.32563400 -58.68025589]
[-44.47687149 -48.32147217]
[-33.62810898 -37.96269226]
[-22.77934647 -27.60391045]
[-11.93058395 -17.24512863]
[-1.08182180 -6.88634586]
[13.28985119 -18.84265137]
[29.06179810 -28.87977791]
[45.97932053 -36.83563614]
[63.76921463 -42.58175278]
[82.14419556 -46.02532578]
[100.80753326 -47.11075211]
[119.45783234 -45.82049942]
[137.79389954 -42.17540741]
[155.51963806 -36.23433685]
[172.34880066 -28.09323311]
[188.00961304 -17.88356209]
[202.24916077 -5.77020216]
[214.83749390 8.05123138]
[225.57133484 23.35753632]
[234.27732849 39.90153503]
[240.81489563 57.41605759]
[245.07844543 75.61826324]
[259.97851562 73.88961792]
[274.87857056 72.16096497]
[289.77862549 70.43231964]
[295.80029297 56.30309677]
[308.08947754 47.09050751]
[323.34042358 45.27268600]
[337.45068359 51.33862305]
[346.62472534 63.65661240]
[348.39471436 78.91316986]
[342.28457642 93.00437164]
[329.93789673 102.13973999]
[314.67587280 103.86191559]
[300.60391235 97.70764160]
[291.50726318 85.33238220]
[276.60720825 87.06102753]
[261.70715332 88.78967285]
[246.80709839 90.51831818]
[247.11155701 100.64520264]
[246.71827698 110.76902008]
[245.62913513 120.84175873]
[243.84930420 130.81565857]
[241.38720703 140.64338684]
[238.25451660 150.27836609]
[234.46611023 159.67486572]
[230.03994751 168.78834534]
[224.99702454 177.57556152]
[219.36125183 185.99485779]
[213.15937805 194.00628662]
[206.42079163 201.57185364]
[199.17745972 208.65568542]
[191.46374512 215.22416687]
[183.31623840 221.24615479]
[174.77355957 226.69308472]
[165.87625122 231.53913879]
[156.66648865 235.76130676]
[147.18797302 239.33958435]
[137.48565674 242.25698853]
[127.60553741 244.49969482]
[117.59449005 246.05703735]
[107.50000000 246.92166138]
[107.50000000 261.92166138]
[107.50000000 276.92166138]
[107.50000000 291.92166138]
[113.54634094 307.76080322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 132]
[5 131]
[27 74]
[28 73]
[29 72]
[30 71]
[31 70]
[32 69]
[37 65]
[38 64]
[40 60]
[41 59]
[42 58]
[43 57]
[44 53]
[45 52]
[91 108]
[92 107]
[93 106]
[94 105]
] def

init

% Start Annotations
2 134 0.0 0.2 colorpair
5 131 0.16 1 colorpair
28 73 0.32 1 colorpair
29 72 0.16 0.2 colorpair
30 71 0.16 1 colorpair
31 70 0.16 1 colorpair
32 69 0.0 0.2 colorpair
37 65 0.0 1 colorpair
41 59 0.0 1 colorpair
42 58 0.16 0.6 colorpair
44 53 0.0 1 colorpair
45 52 0.16 1 colorpair
92 107 0.0 1 colorpair
93 106 0.32 1 colorpair
94 105 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 134 2 gmark
3 133 4 gmark
4 132 7 gmark
4 cmark
132 cmark
5 cmark
27 74 5 gmark
27 cmark
74 cmark
28 cmark
73 cmark
29 72 2 gmark
72 cmark
30 cmark
70 cmark
32 69 2 gmark
38 64 8 gmark
40 60 6 gmark
60 cmark
42 58 1 gmark
42 cmark
43 57 4 gmark
57 cmark
45 cmark
91 108 7 gmark
93 cmark
106 cmark
105 cmark

% End Annotations
showpage
end
%%EOF
