%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon May  5 22:12:48 2025
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACUAUUCGUUACAUGAUCCAUCAUAGAAUUCUCAAUAUGAUAUAUACACUCAGACCCAAACAUCAACCAAUUCUUCAAAUACCUACUCAUAUUCCUAAUCACUAUACUAAUCCUAGUCACCGCUAACAACCUAUUCCAACUAUUCAUCGGCUGAGAAGGAGUAGGAAUCAUAUCAUUCCUACUAAUCGGAUGAUGAUACGGACGAACAGACGCC\
) } def
/len { sequence length } bind def

/coor [
[114.07191467 276.34591675]
[120.11824799 260.50677490]
[120.11824799 245.50677490]
[110.53841400 230.80059814]
[119.88472748 214.93186951]
[119.66857147 199.93342590]
[111.74867249 187.31898499]
[119.28630066 173.40873718]
[119.07014465 158.41029358]
[118.85398865 143.41184998]
[118.63783264 128.41340637]
[111.97006226 124.97962952]
[105.10248566 138.31515503]
[98.23491669 151.65069580]
[91.36734009 164.98622131]
[88.95677185 179.79125977]
[74.13143158 182.07365417]
[67.37948608 168.67921448]
[78.03180695 158.11865234]
[84.89938354 144.78311157]
[91.76696014 131.44758606]
[98.63452911 118.11205292]
[91.96676636 114.67826080]
[79.63146210 123.21291351]
[67.29615784 131.74755859]
[54.96084976 140.28221130]
[42.62554550 148.81686401]
[30.29024315 157.35151672]
[18.07920647 166.06303406]
[5.99497652 174.94961548]
[-0.08953788 190.17823792]
[-16.35664368 192.25508118]
[-26.07213783 179.04367065]
[-19.24155235 164.13478088]
[-2.89160752 162.86538696]
[9.19262314 153.97880554]
[10.78497887 149.48123169]
[15.21664333 145.93400574]
[21.75559235 145.01620483]
[34.09089661 136.48156738]
[46.42620087 127.94690704]
[58.76150513 119.41226196]
[71.09680939 110.87760925]
[83.43211365 102.34295654]
[69.04096222 106.57318115]
[54.10807800 105.15581512]
[40.76977539 98.29361725]
[30.93424797 86.96832275]
[26.00857735 72.80012512]
[26.69743919 57.81595230]
[32.90228271 44.15945435]
[43.73543167 33.78434753]
[57.64708710 28.17490578]
[72.64703369 28.13362503]
[86.58934784 33.66640854]
[97.47944641 43.98173523]
[103.75936127 57.60387421]
[104.53068542 72.58403015]
[99.68218994 86.78066254]
[108.74198914 74.82574463]
[103.62123108 58.70252991]
[109.06746674 42.86201096]
[122.74620056 33.48467636]
[139.15266418 34.10400391]
[148.03926086 22.01977348]
[156.92584229 9.93554401]
[165.81242371 -2.14868617]
[174.69900513 -14.23291683]
[176.64147949 -29.93442535]
[190.41490173 -35.60383224]
[199.30148315 -47.68806458]
[208.18806458 -59.77229309]
[217.07464600 -71.85652161]
[225.96124268 -83.94075012]
[213.96313477 -74.93822479]
[200.76986694 -67.80116272]
[186.66925049 -62.68526077]
[171.96887207 -59.70212555]
[156.98944092 -58.91683197]
[142.05773926 -60.34651566]
[127.49947357 -63.95998383]
[113.63226318 -69.67840576]
[100.75860596 -77.37704468]
[89.15934753 -86.88794708]
[79.08752441 -98.00362396]
[70.76285553 -110.48160553]
[64.36694336 -124.04966736]
[60.03931427 -138.41181946]
[57.87437820 -153.25477600]
[57.91936111 -168.25469971]
[60.17327881 -183.08439636]
[64.58696747 -197.42034912]
[71.06414032 -210.94979858]
[79.46349335 -223.37762451]
[89.60180664 -234.43270874]
[101.25789642 -243.87387085]
[114.17749023 -251.49514771]
[128.07875061 -257.13031006]
[142.65841675 -260.65640259]
[157.59843445 -261.99649048]
[172.57289124 -261.12136841]
[187.25509644 -258.05014038]
[201.32478333 -252.84976196]
[214.47502136 -245.63369751]
[226.41891479 -236.55937195]
[236.89591980 -225.82473755]
[245.67747498 -213.66397095]
[252.57200623 -200.34234619]
[257.42913818 -186.15051270]
[260.14288330 -171.39802551]
[260.65402222 -156.40673828]
[258.95144653 -141.50367737]
[255.07229614 -127.01396179]
[249.10118103 -113.25366211]
[241.16865540 -100.52340698]
[252.44030762 -110.42036438]
[263.71197510 -120.31732178]
[264.88967896 -135.84956360]
[276.46173096 -145.72592163]
[291.26211548 -144.50743103]
[302.53375244 -154.40438843]
[313.80541992 -164.30134583]
[325.00546265 -174.27925110]
[336.13333130 -184.33761597]
[347.26119995 -194.39598083]
[340.00006104 -207.60098267]
[335.98049927 -222.12475586]
[335.41928101 -237.18403625]
[338.34671021 -251.96669006]
[344.60488892 -265.67550659]
[353.85635376 -277.57119751]
[365.60211182 -287.01223755]
[379.20880127 -293.48950195]
[393.94262695 -296.65365601]
[409.00894165 -296.33404541]
[423.59533691 -292.54794312]
[436.91510010 -285.49951172]
[448.24996948 -275.56887817]
[456.98861694 -263.29156494]
[462.65985107 -249.32968140]
[464.95776367 -234.43618774]
[463.75848389 -219.41426086]
[459.12661743 -205.07400513]
[451.31204224 -192.18879700]
[440.73611450 -181.45349121]
[427.96923828 -173.44705200]
[413.69985962 -168.60124207]
[398.69754028 -167.17738342]
[383.77133179 -169.25228882]
[369.72619629 -174.71405029]
[357.31954956 -183.26811218]
[346.19171143 -173.20974731]
[335.06384277 -163.15138245]
[332.21099854 -156.33779907]
[323.70236206 -153.02967834]
[312.43072510 -143.13272095]
[301.15905762 -133.23576355]
[300.45312500 -118.40211487]
[289.16302490 -108.20462799]
[273.60891724 -109.04566193]
[262.33728027 -99.14870453]
[251.06561279 -89.25174713]
[265.11782837 -86.03340912]
[271.55770874 -74.37479401]
[285.81015015 -69.69844055]
[301.33468628 -72.74783325]
[311.01550293 -61.42833328]
[325.26794434 -56.75197983]
[339.52035522 -52.07562637]
[353.77279663 -47.39927292]
[366.27328491 -56.59259415]
[381.79025269 -56.64887238]
[394.35711670 -47.54646683]
[399.14163208 -32.78543854]
[394.30407715 -18.04170418]
[381.70458984 -8.98453045]
[366.18792725 -9.09658623]
[353.72055054 -18.33478355]
[349.09643555 -33.14684677]
[334.84402466 -37.82319641]
[320.59158325 -42.49954987]
[306.33914185 -47.17590332]
[291.83401489 -43.79203033]
[281.13378906 -55.44601440]
[266.88134766 -60.12236786]
[254.73136902 -55.00455856]
[242.15975952 -60.98440552]
[238.04547119 -75.05416870]
[229.15888977 -62.96994019]
[220.27229309 -50.88570786]
[211.38571167 -38.80147934]
[202.49913025 -26.71724892]
[201.19229126 -11.88008499]
[186.78323364 -5.34633207]
[177.89665222 6.73789787]
[169.01007080 18.82212830]
[160.12348938 30.90635872]
[151.23690796 42.99058914]
[156.45155334 55.27767181]
[154.90281677 68.64432526]
[146.88888550 79.58813477]
[134.41593933 85.18846893]
[120.69690704 83.88555145]
[111.63710785 95.84046173]
[127.68459320 104.95737457]
[133.63627625 128.19725037]
[133.85243225 143.19569397]
[134.06858826 158.19413757]
[134.28474426 173.19258118]
[142.22010803 186.87982178]
[134.66702271 199.71726990]
[134.88317871 214.71571350]
[143.57147217 224.24400330]
[143.44561768 236.73738098]
[135.11825562 245.50677490]
[135.11825562 260.50677490]
[141.16459656 276.34591675]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[5 212]
[6 211]
[8 209]
[9 208]
[10 207]
[11 206]
[23 44]
[24 43]
[25 42]
[26 41]
[27 40]
[28 39]
[29 36]
[30 35]
[59 204]
[60 203]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[115 162]
[116 161]
[117 160]
[120 157]
[121 156]
[122 155]
[123 153]
[124 152]
[125 151]
[164 185]
[165 184]
[167 182]
[168 181]
[169 180]
[170 179]
] def

init

% Start Annotations
2 216 0.0 1 colorpair
3 215 0.0 1 colorpair
5 212 0.16 1 colorpair
6 211 0.16 0.2 colorpair
9 208 0.16 0.2 colorpair
10 207 0.16 1 colorpair
23 44 0.0 1 colorpair
24 43 0.16 1 colorpair
25 42 0.16 1 colorpair
26 41 0.0 1 colorpair
27 40 0.16 0.6 colorpair
29 36 0.0 0.2 colorpair
30 35 0.0 1 colorpair
60 203 0.0 0.6 colorpair
64 198 0.16 0.6 colorpair
65 197 0.0 0.2 colorpair
66 196 0.16 1 colorpair
67 195 0.16 0.2 colorpair
68 194 0.16 1 colorpair
70 192 0.16 1 colorpair
73 189 0.16 0.6 colorpair
74 188 0.0 1 colorpair
115 162 0.16 1 colorpair
116 161 0.16 1 colorpair
117 160 0.16 1 colorpair
123 153 0.0 0.6 colorpair
125 151 0.16 0.6 colorpair
164 185 0.32 1 colorpair
167 182 0.16 1 colorpair
168 181 0.16 1 colorpair
170 179 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 cmark
6 211 2 gmark
211 cmark
8 209 3 gmark
209 cmark
9 208 2 gmark
208 cmark
10 cmark
11 206 5 gmark
43 cmark
25 cmark
27 40 1 gmark
40 cmark
28 39 4 gmark
28 cmark
29 36 2 gmark
59 204 7 gmark
60 203 1 gmark
64 198 1 gmark
64 cmark
65 197 2 gmark
196 cmark
67 195 2 gmark
67 cmark
68 cmark
70 cmark
71 191 8 gmark
72 190 6 gmark
72 cmark
190 cmark
73 189 1 gmark
73 cmark
115 cmark
116 cmark
160 cmark
120 157 5 gmark
120 cmark
157 cmark
121 156 5 gmark
121 cmark
122 155 3 gmark
123 153 1 gmark
124 152 5 gmark
124 cmark
125 151 1 gmark
151 cmark
164 cmark
185 cmark
165 184 4 gmark
184 cmark
182 cmark
181 cmark
169 180 3 gmark
169 cmark

% End Annotations
showpage
end
%%EOF
